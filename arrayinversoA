
import java.util.Scanner;
import java.util.InputMismatchException;

public class App {

    public static int tamv = 0;
    public static Scanner leer = new Scanner(System.in);

    public static void main(String[] args) {

        boolean condicionSalida = true;

        do {
            try {
                System.out.println(
                        "Ingrese el tamaño del arreglo que no supere los 16, sea mayor a 1 y que tampoco sea negativo ");
                tamv = leer.nextInt();
                condicionSalida = tamv < 2 || tamv > 16;
            } catch (InputMismatchException e) {
                System.out.println("Por favor ingrese un número entero.");
                leer.nextLine(); // Limpiar el buffer del scanner
            }
        } while (condicionSalida);

        int[] array = llenado();
        System.out.println("Mostrar arreglo original:");
        mostrar(array);

        int[] arrayInvertido = invertirArreglo(array);
        System.out.println("Mostrar arreglo invertido:");
        mostrar(arrayInvertido);
    }

    public static int[] llenado() {
        int[] arreglo = new int[tamv];
        for (int i = 0; i < arreglo.length; i++) {
            boolean valido;
            do {
                valido = true;
                try {
                    System.out.println("Ingrese el valor [" + i + "]:");
                    arreglo[i] = leer.nextInt();
                } catch (InputMismatchException e) {
                    System.out.println("Por favor ingrese un número entero.");
                    valido = false;
                    leer.nextLine(); // Limpiar el buffer del scanner
                }
            } while (!valido);
        }
        return arreglo;
    }

    public static void mostrar(int[] a) {
        for (int i : a) {
            System.out.println(i);
        }
    }

    public static int[] invertirArreglo(int[] arreglo) {
        int[] invertido = new int[arreglo.length];
        for (int i = 0; i < arreglo.length; i++) {
            invertido[i] = arreglo[arreglo.length - 1 - i];
        }
        return invertido;
    }
}
